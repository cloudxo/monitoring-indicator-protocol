---
resources:
- name: monitoring-indicator-protocol
  type: git
  source:
    uri: git@github.com:pivotal/monitoring-indicator-protocol.git
    branch: v0.7
    private_key: ((mip-deploy-key.private_key))
    ignore_paths:
    - README.md
    - ci
    - bosh-release/.final_builds
    - bosh-release/releases
    - k8s/examples
- name: env-state
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/denver-locks.git
    private_key: ((denver-locks-deploy-key.private_key))
- name: release-version
  type: semver
  source:
    driver: gcs
    bucket: monitoring-indicator-protocol
    key: releases/v0.7/version
    json_key: |
      ((gcp-service-account))
- name: github-release-drafts
  type: github-release
  source:
    user: pivotal
    repository: monitoring-indicator-protocol
    access_token: ((bot-github-access-token))
    drafts: true
- name: dev-release
  type: gcs-resource
  source:
    bucket: monitoring-indicator-protocol
    json_key: ((gcp-service-account))
    regexp: releases/v0.7/dev/indicator-protocol-bosh-(.*).tgz

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

jobs:
- name: build-and-test
  plan:
  - get: monitoring-indicator-protocol
    trigger: true
  - task: build-and-test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: indicatorprotocol/test-base
      inputs:
      - name: monitoring-indicator-protocol
      run:
        path: bash
        args:
        - -c
        - |
          #!/usr/bin/env bash

          set -eu

          pushd monitoring-indicator-protocol
            scripts/test.sh
          popd

- name: indicator-docs
  plan:
  - get: monitoring-indicator-protocol
    passed: [build-and-test]
    trigger: true
  - task: generate-docs
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: indicatorprotocol/test-base
      inputs:
      - name: monitoring-indicator-protocol
      run:
        path: bash
        args:
        - -c
        - |
          #!/usr/bin/env bash

          set -eu

          export GO111MODULE=on

          pushd monitoring-indicator-protocol/
            go run -mod=vendor cmd/format/main.go -format bookbinder -indicators example_indicators.yml
          popd

- name: indicator-verification
  plan:
  - in_parallel:
    - get: monitoring-indicator-protocol
      passed: [build-and-test]
      trigger: true
    - get: env-state
  - task: verify-metric
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: indicatorprotocol/test-base
      inputs:
      - name: monitoring-indicator-protocol
      - name: env-state
      params:
        ENVIRONMENT: madlamp
        BBL_STATE_DIR: acceptance-bosh/indicator-protocol/madlamp
        DEPLOYMENT_NAME: cf-01234567890123456789
      run:
        path: bash
        args:
        - -c
        - |
          #!/usr/bin/env bash

          set -eu

          pushd "env-state/${BBL_STATE_DIR}"
            eval "$(bbl print-env)"
          popd

          export GO111MODULE=on

          pushd monitoring-indicator-protocol/

            cat << EOF > indicators.yml
          ---
          apiVersion: v0
          product:
            name: uaa-test
            version: 0
          indicators:
          - name: uaa_request_rate
            promql: rate(requests_global_status_2xx_count{source_id="uaa"}[10m])
          EOF

            uaa_secret="$(credhub g -n /bosh-${ENVIRONMENT}/${DEPLOYMENT_NAME}/uaa_clients_firehose_exporter_secret -j | jq -r .value)"
            access_token=$(curl -X POST "https://login.${ENVIRONMENT}.cf-denver.com/oauth/token" -k -u "firehose_exporter:${uaa_secret}" -H 'Accept: application/json' -d 'grant_type=client_credentials'  | jq -r .access_token)

            go run -mod=vendor cmd/verification/main.go -indicators=indicators.yml \
                                                        -authorization="bearer ${access_token}" \
                                                        -query-endpoint=https://metric-store.${ENVIRONMENT}.cf-denver.com \
                                                        -k

          popd

- name: deploy-indicator-registry
  plan:
  - in_parallel:
    - get: env-state
    - get: monitoring-indicator-protocol
      trigger: true
      passed: [build-and-test]
    - get: release-version
  - task: deploy
    config:
      params:
        ENVIRONMENT: madlamp
        DEPLOYMENT_NAME: cf-01234567890123456789
        BBL_STATE_DIR: acceptance-bosh/indicator-protocol/madlamp
        PROMETHEUS_URI: https://metric-store.madlamp.cf-denver.com
        UAA_URI: https://uaa.madlamp.cf-denver.com
        UAA_CLIENT_ID: healthwatch_admin
        SERVICE_ACCOUNT: ((gcp-service-account))
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: indicatorprotocol/test-base
      inputs:
      - name: monitoring-indicator-protocol
      - name: env-state
      - name: release-version
      run:
        path: bash
        args:
        - -c
        - |
          set -e

          pushd "env-state/${BBL_STATE_DIR}"
            eval "$(bbl print-env)"
          popd

          mkdir -p monitoring-indicator-protocol/bosh-release/src/github.com/pivotal/
          rsync -Rr ./monitoring-indicator-protocol/ ./monitoring-indicator-protocol/bosh-release/src/github.com/pivotal/

          BUILD_NUMBER=$(cat release-version/number)

          pushd monitoring-indicator-protocol/bosh-release

            cat << EOF > config/private.yml
          ---
          blobstore:
            options:
              credentials_source: static
              json_key: |
                ${SERVICE_ACCOUNT}
          EOF

            bosh -n create-release --sha2 --force \
              --version ${BUILD_NUMBER}
            bosh -n upload-release --fix

            bosh update-runtime-config -n \
              --name indicator-registration-agent \
              --var=indicator-protocol-version=$BUILD_NUMBER \
              manifests/agent_runtime_config.yml

          UAA_CLIENT_SECRET=$(credhub g -n /bosh-${ENVIRONMENT}/${DEPLOYMENT_NAME}/uaa_clients_cc-service-dashboards_secret -j | jq -r .value)

          bosh -n -d indicator-registry deploy \
            manifests/manifest.yml \
            -o ops_files/add-examples-git-source.yml \
            -o ops_files/configure-status-controller.yml \
            -v prometheus_uri=$PROMETHEUS_URI \
            -v uaa_uri=$UAA_URI \
            -v uaa_client_id=$UAA_CLIENT_ID \
            -v uaa_client_secret=$UAA_CLIENT_SECRET
          popd

          CF_DEPLOYMENT_NAME=$(bosh deployments --json | jq .Tables[0].Rows | jq '.[] | select( .name | contains("cf"))' | jq .name -r)
          bosh -n -d $CF_DEPLOYMENT_NAME manifest > temp.yml
          bosh -n -d $CF_DEPLOYMENT_NAME deploy temp.yml
          rm temp.yml

- name: create-dev-release
  plan:
  - in_parallel:
    - get: monitoring-indicator-protocol
      passed: [indicator-verification,indicator-docs,deploy-indicator-registry]
      trigger: true
    - get: release-version
      params:
        pre: build
  - task: create-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: indicatorprotocol/test-base
      inputs:
      - name: release-version
      - name: monitoring-indicator-protocol
      outputs:
      - name: created-release
      params:
        RELEASE_NAME: indicator-protocol
        RELEASE_BLOBSTORE_BUCKET: monitoring-indicator-protocol-bosh-blobs
        SERVICE_ACCOUNT: ((gcp-service-account))
      run:
        path: bash
        args:
        - -c
        - |
          #!/usr/bin/env bash
          set -e

          BUILD_NUMBER="$(cat release-version/number)"

          mkdir -p monitoring-indicator-protocol/bosh-release/src/github.com/pivotal
          rsync -Rr ./monitoring-indicator-protocol/ ./monitoring-indicator-protocol/bosh-release/src/github.com/pivotal/

          pushd monitoring-indicator-protocol/bosh-release
            cat << EOF > config/private.yml
          ---
          blobstore:
            provider: gcs
            options:
              bucket_name: ${RELEASE_BLOBSTORE_BUCKET}
              credentials_source: static
              json_key: |
                ${SERVICE_ACCOUNT}
          EOF

            bosh -n create-release --sha2 --force \
              --version ${BUILD_NUMBER} \
              --tarball ../../created-release/${RELEASE_NAME}-bosh-${BUILD_NUMBER}.tgz
          popd
  - in_parallel:
    - put: dev-release
      params:
        file: created-release/*.tgz
    - put: release-version
      params:
        pre: build

- name: finalize-release
  plan:
  - in_parallel:
    - get: monitoring-indicator-protocol
      passed:
      - create-dev-release
    - get: release-version
      params:
        bump: final
    - get: dev-release
      passed:
      - create-dev-release
  - task: create-final-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: indicatorprotocol/test-base
      inputs:
      - name: release-version
      - name: monitoring-indicator-protocol
      - name: dev-release
      outputs:
      - name: final-release
      - name: github-release
      params:
        RELEASE_NAME: indicator-protocol
        RELEASE_BLOBSTORE_BUCKET: monitoring-indicator-protocol-bosh-blobs
        SERVICE_ACCOUNT: ((gcp-service-account))
      run:
        path: bash
        args:
        - -c
        - |
          #!/usr/bin/env bash
          set -e

          BUILD_NUMBER=$(cat release-version/number)
          tag_name="v$BUILD_NUMBER"

          # write out github release files
          echo "${RELEASE_NAME} ${tag_name}" > github-release/name
          echo $tag_name > github-release/tag
          echo "TBD" > github-release/body

          mkdir -p monitoring-indicator-protocol/bosh-release/src/github.com/pivotal
          rsync -Rr ./monitoring-indicator-protocol/ ./monitoring-indicator-protocol/bosh-release/src/github.com/pivotal/

          pushd monitoring-indicator-protocol/bosh-release
            cat << EOF > config/private.yml
          ---
          blobstore:
            provider: gcs
            options:
              bucket_name: ${RELEASE_BLOBSTORE_BUCKET}
              credentials_source: static
              json_key: |
                ${SERVICE_ACCOUNT}
          EOF

            bosh -n finalize-release --sha2 \
              --version "$BUILD_NUMBER" \
              ../../dev-release/*.tgz

            bosh -n create-release --sha2 \
              --tarball ../../github-release/${RELEASE_NAME}-bosh-${BUILD_NUMBER}.tgz \
              --version "$BUILD_NUMBER" \
              releases/indicator-protocol/indicator-protocol-${BUILD_NUMBER}.yml

            git add .
            git config --global user.email "indicartor-protocol@pivotal.io"
            git config --global user.name "indicator-protocol-bot"
            git commit -m "Create final release\

            [ci skip]"
          popd

          cp -r "monitoring-indicator-protocol/." "final-release/"
  - task: publish-github-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: indicatorprotocol/test-base
      inputs:
      - name: monitoring-indicator-protocol
      - name: release-version
      - name: github-release
      outputs:
      - name: github-release
        path: github-release-output
      run:
        path: bash
        args:
        - -c
        - |
          #!/usr/bin/env bash
          set -e

          cp github-release/* github-release-output/

          BUILD_NUMBER=$(cat release-version/number)

          pushd monitoring-indicator-protocol
            echo "Building darwin cli-plugin binary"
            GOARCH=amd64 GOOS=darwin go build -mod=vendor -o ../github-release-output/indicator-format-macosx64-${BUILD_NUMBER} cmd/format/main.go
            GOARCH=amd64 GOOS=darwin go build -mod=vendor -o ../github-release-output/indicator-verification-macosx64-${BUILD_NUMBER} cmd/verification/main.go

            echo "Building amd64 linux cli-plugin binary"
            GOARCH=amd64 GOOS=linux go build -mod=vendor -o ../github-release-output/indicator-format-linux64-${BUILD_NUMBER} cmd/format/main.go
            GOARCH=amd64 GOOS=linux go build -mod=vendor -o ../github-release-output/indicator-verification-linux64-${BUILD_NUMBER} cmd/verification/main.go
          popd
  - task: prefix-version-number
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: buildpack-deps
          tag: stretch-scm
      inputs:
      - name: release-version
      outputs:
      - name: prefixed-release-version
      run:
        path: bash
        args:
        - -c
        - |
          #!/usr/bin/env bash
          set -e
          number=$(cat "./release-version/number")
          echo v${number} > prefixed-release-version/version
  - put: monitoring-indicator-protocol
    params:
      repository: monitoring-indicator-protocol
      rebase: true
      tag: release-version/version
      tag_prefix: v
  - put: monitoring-indicator-protocol
    params:
      repository: final-release
      rebase: true
  - put: github-release-drafts
    params:
      name: github-release/name
      tag: github-release/tag
      body: github-release/body
      globs:
      - github-release/indicator-*
  - put: release-version
    params:
      bump: patch
